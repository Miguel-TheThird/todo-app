{"version":3,"sources":["components/Modal.jsx","components/NavBar.jsx","components/Form.jsx","components/ListTodo.jsx","components/SideBar.jsx","components/SignIn.jsx","App.js","reportWebVitals.js","index.js"],"names":["Modal","props","className","onClick","setOpenModal","NavBar","useState","openModal","to","Form","value","inputText","onChange","e","setInputText","target","type","placeholder","preventDefault","setTodos","todos","text","completed","id","Math","random","ListTodo","todo","map","item","filter","console","log","SideBar","htmlFor","setStatus","name","filteredTodos","SignIn","userName","setUserName","errorMessage","setErrorMessage","inputValue","path","component","App","match","status","setFilteredTodos","useEffect","getLocalTodos","filterHandler","saveLocalTodos","localStorage","setItem","JSON","stringify","getItem","todoLocal","parse","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7c5204c1.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"../ModalStyle.css\"\r\n\r\nfunction Modal(props) {\r\n\r\n    const closeModalHandler = () =>{\r\n        props.setOpenModal(false)\r\n      };\r\n\r\n    return (\r\n        <div className=\"modalBackground\">\r\n            <div className=\"modalContainer\">\r\n                <div className=\"title\"><h1>What Would You Like To Change?</h1></div>\r\n                <div className=\"body\"><p>Sorry This Page Is Under Maintenance, Please Comeback Later!</p></div>\r\n                <div className=\"footer\">\r\n                    <button onClick={closeModalHandler}>Close</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Modal;","import React, { useState } from \"react\";\r\nimport Modal from \"./Modal\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nconst NavBar = () => {\r\n\r\n  const [openModal, setOpenModal] = useState(false)\r\n\r\n  const modalHandler = () => {\r\n    setOpenModal(true)\r\n  }\r\n\r\n  return (\r\n    <nav>\r\n      <button className={\"buttons\"} onClick={modalHandler} >Settings</button>\r\n      {openModal && <Modal setOpenModal={setOpenModal} />}\r\n      <h4>To-Do List</h4>\r\n      <Link to='/'>\r\n        <button className={\"buttons\"} >Logout</button>\r\n      </Link>\r\n    </nav>\r\n  )\r\n};\r\n\r\nexport default NavBar;\r\n\r\n","import React from \"react\";\r\n\r\n\r\nconst Form = (props) => {\r\n  const inputTextHandler = (e) => {\r\n    props.setInputText(e.target.value) // Value of form-input into inputText variable\r\n\r\n  }\r\n\r\n  const submitTodoHandler = (e) => {\r\n    e.preventDefault(); //Prevent refresh after submit\r\n    props.setTodos([ //Add following to todos variable\r\n      ...props.todos, {  //Copy whatever existing todos that you have in the state, then add this {} \r\n        text: props.inputText, //Copy inputText variable from first State\r\n        completed: false, //All todos will be false at the start\r\n        id: Math.random() * 100 //Generate a random id\r\n      }\r\n    ])\r\n    props.setInputText(\"\"); //To get rid of the writing afterpressing sumbit\r\n  }\r\n\r\n  return (\r\n    <section>\r\n      <form>\r\n        <label>Add Todo</label>\r\n        <div className=\"input-wrapper\">\r\n          <input\r\n            className={\"select\"}\r\n            value={props.inputText} //Keep the UI in sync with the state\r\n            onChange={inputTextHandler}\r\n            type=\"text\"\r\n            placeholder=\"Type to-do here...\"\r\n          />\r\n          <button className={\"buttons\"} onClick={submitTodoHandler} type=\"submit\">+</button>\r\n        </div>\r\n      </form>\r\n    </section>\r\n  )\r\n};\r\n\r\nexport default Form;\r\n","// TODO\r\nimport React from \"react\";\r\n\r\nconst ListTodo = (props) => {\r\n\r\n    const completeHandler = () => {\r\n        props.setTodos(props.todos.map((item) => {\r\n            if (item.id === props.todo.id) {\r\n                return {\r\n                    ...item, //Copy properties from exisiting item/todo\r\n                    completed: !item.completed, //Only modify the completed property\r\n                };\r\n            }\r\n            return item; //If it doesnt match, just return the same element \r\n        }))\r\n    };\r\n\r\n    const deleteHandler = () => {\r\n        props.setTodos(props.todos.filter((item) => item.id !== props.todo.id));\r\n        console.log(\"This todo was deleted\", props.todos)\r\n    };\r\n\r\n    return (\r\n        <div className='todo'>\r\n            <li className={`todo-item ${props.todo.completed ? \"completed\" : ''}`}> {props.text}</li> {/* Update UI CSS based of state */}\r\n\r\n            <button onClick={completeHandler} className=\"buttons\">Completed</button>\r\n\r\n            <button onClick={deleteHandler} className=\"buttons\">Delete</button>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ListTodo;","//Parent of ListTodo\r\nimport React from \"react\";\r\nimport ListTodo from \"./ListTodo\"; \r\n\r\n\r\n//Now props have access to \"todos\" variable from state //Map it to create a new ListTodo component\r\nconst SideBar = (props) => {\r\n    const statusHandler = (e) => {\r\n        console.log(\"Something happened!\" , e.target.value)\r\n        props.setStatus(e.target.value)\r\n      }\r\n\r\n    return(\r\n        <aside>\r\n              <div className=\"todo-container\">\r\n                <label htmlFor=\"select-status\">List Of Todos&nbsp;&nbsp;</label> \r\n                <select className={\"select\"} onChange={statusHandler} name=\"select-status\" id=\"status\">\r\n                  <option className={\"option\"} value=\"all\">All Todos</option>\r\n                  <option className={\"option\"} value=\"completed\">Completed</option>\r\n                  <option className={\"option\"} value=\"uncompleted\">Uncompleted</option>\r\n                </select>\r\n              </div>\r\n              <ol>\r\n              {props.filteredTodos.map((todo) =>(\r\n              <ListTodo \r\n              key={todo.id} \r\n              text={todo.text} //Text from 1st state goes to the 2dn state through text prop\r\n              todos={props.todos} \r\n              setTodos={props.setTodos} \r\n              todo={todo}\r\n              />))} {/* After we gro through each element, pass it to have access to each one and therefore we can get the .id */}\r\n\r\n              </ol>\r\n            </aside>\r\n    )\r\n};\r\n\r\nexport default SideBar;","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport App from \"../App\";\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\r\n\r\nfunction SignIn() {\r\n    const [userName, setUserName] = useState('')\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n\r\n\r\n\r\n    function checkUserName(input) {\r\n        const userInput = /^[A-Za-z]\\w{5,14}$/;\r\n        if (input.match(userInput)) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    const handleInputChange = (e) => {\r\n        let inputValue = e.target.value;\r\n        console.log(inputValue)\r\n        setUserName(inputValue)\r\n    }\r\n\r\n\r\n    const handleFormSubmit = (e) => {\r\n\r\n\r\n        if (!checkUserName(userName)) {\r\n            setErrorMessage(`User Name must be 5 digits long`);\r\n            e.preventDefault();\r\n        }\r\n        setUserName('');\r\n\r\n    };\r\n\r\n\r\n    return (\r\n        <div >\r\n            <form className=\"signInForm\">\r\n                <div className={\"sign\"} >\r\n                    <label>User Name</label>\r\n                    <input className={\"select\"} placeholder=\" 4+ Characters\" type=\"text\" onChange={handleInputChange} value={userName} />\r\n                    <Link to='/dashboard'>\r\n                        <Route path=\"/dashboard\" component={App} /><button className={\"buttons\"} onClick={handleFormSubmit} type=\"submit\">login</button>\r\n                    </Link>\r\n                    {errorMessage && (<div><p className=\"error-text\">{errorMessage}</p></div>)}\r\n\r\n                </div>\r\n\r\n            </form>\r\n        </div>\r\n    )\r\n\r\n};\r\n\r\nexport default SignIn;","import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport './App.css';\n\n//Import components\nimport NavBar from \"./components/NavBar\";\nimport Form from \"./components/Form\";\nimport SideBar from \"./components/SideBar\";\nimport SignIn from \"./components/SignIn\";\n\n\nfunction App() {\n  //States\n  const [inputText, setInputText] = useState(\"\"); //Initial state of the Form input \" \"\n  const [todos, setTodos] = useState([]); //Array to store todos\n  //States for filtering\n  const [status, setStatus] = useState('all'); //Default 'all'\n  const [filteredTodos, setFilteredTodos] = useState([]);//Filtering Todos\n  \n\n  useEffect(() => {\n    getLocalTodos();\n  }, [])\n\n  useEffect(() => { filterHandler(); saveLocalTodos(); }, [todos, status])\n\n  const filterHandler = () => {\n    switch (status) {\n      case \"completed\":\n        setFilteredTodos(todos.filter((todo) => todo.completed === true))\n        break;\n      case \"uncompleted\":\n        setFilteredTodos(todos.filter((todo) => todo.completed === false))\n        break;\n      default: setFilteredTodos(todos);\n        break;\n    }\n  };\n\n  \n\n  const saveLocalTodos = () => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos))\n  };\n\n  const getLocalTodos = () => {\n    if (localStorage.getItem(\"todos\") === null) {\n      localStorage.setItem(\"todos\", JSON.stringify([]));\n    } else {\n      let todoLocal = JSON.parse(localStorage.getItem(\"todos\"));\n      setTodos(todoLocal);\n    }\n\n  }\n\n\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/\" exact component={SignIn}/>\n        <div className=\"App\">\n          <NavBar />\n          <main>\n            <Form todos={todos} setTodos={setTodos} inputText={inputText} setInputText={setInputText} />\n            <SideBar todos={todos} setTodos={setTodos} setStatus={setStatus} filteredTodos={filteredTodos} /> {/* Pass it to keep the UI in sync with the state */}\n          </main>\n        </div>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}